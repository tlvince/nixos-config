name: Update flake
on:
  workflow_dispatch:
  schedule:
    - cron: "15 8 * * *"
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  lockfile:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Generate GitHub token
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2
        id: generate-github-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.GH_APP_KEY }}
          owner: tlvince
          repositories: nixos-config-secrets
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@90bb610b90bf290cad97484ba341453bd1cbefea # v19
        with:
          github-token: ${{ steps.generate-github-token.outputs.token }}
      - name: Update flake.lock
        uses: DeterminateSystems/update-flake-lock@c5930b397a673a70ca70be06020e943aeac310a1 # v27
        id: update-flake-lock
        with:
          commit-msg: "chore(flake.lock): update"
          pr-body: |
            ```
            {{ env.GIT_COMMIT_MESSAGE }}
            ```
          pr-title: "chore(flake.lock): update"
          pr-labels: |
            automated
            dependencies
          token: ${{ secrets.GH_TOKEN_FOR_UPDATES }}
      - name: Create compare URLs
        uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b # v7.1.0
        if: steps.update-flake-lock.outputs.pull-request-operation == 'created' || steps.update-flake-lock.outputs.pull-request-operation == 'updated'
        with:
          script: |
            const comment = require('.github/scripts/comment')
            const compare = require('.github/scripts/compare')

            const urls = await compare({ github, context, core })
            if (!urls?.length) {
              return
            }

            const header = "# Compare URLs"
            const body = urls.map((url) => `- ${url}`).join("\n")

            const issueNumber = parseInt(process.env.PULL_REQUEST_NUMBER, 10)
            if (Number.isNaN(issueNumber)) {
              return
            }

            await comment({ github, context, header, body, issueNumber })
