# Based on:
# https://github.com/cuties-social/cuties-social-nixfiles/blob/14593a3014c32ce121529009d8d6564e45dd7e99/.github/workflows/build.yml
name: Build
on:
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash -euo pipefail {0}

jobs:
  build:
    env:
      HOST: framework
      PR_JOB_SUMMARY: pr-job-summary
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Free up disk space
        uses: easimon/maximize-build-space@fc881a613ad2a34aca9c9624518214ebc21dfc0c # v10
        with:
          overprovision-lvm: true
          remove-android: true
          remove-codeql: true
          remove-docker-images: true
          remove-dotnet: true
          remove-haskell: true
      - name: Checkout repository
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@de22e16c4711fca50c816cc9081563429d1cf563 # v10
      - name: Set up GitHub Actions cache
        uses: DeterminateSystems/magic-nix-cache-action@fc6aaceb40b9845a02b91e059ec147e78d1b4e41 # v4
      - name: Set up public cache
        uses: cachix/cachix-action@18cf96c7c98e048e10a83abd92116114cd8504be # v14
        with:
          name: tlvince-nixos-config
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      # Does not work (in CI) with lanzaboote
      # - name: Run flake check
      #   run: |
      #     CHECK_OUTPUT="${RUNNER_TEMP}/flake-check-output"
      #     nix flake check --no-build | tee "$CHECK_OUTPUT"
      #     [[ -s $CHECK_OUTPUT ]] || echo "No issues found by 'nix flake check'." > "$CHECK_OUTPUT"
      #     echo -e "## Flake check\n\`\`\`\n$(<$CHECK_OUTPUT)\n\`\`\`" | tee -a "$GITHUB_STEP_SUMMARY" "${RUNNER_TEMP}/${PR_JOB_SUMMARY}" >/dev/null
      - name: Build
        run: |
          OUT_PATH="$(nix build .#nixosConfigurations.${HOST}.config.system.build.toplevel --print-out-paths)"
          echo -e "\x1b[32;1mSuccessfully built .#nixosConfigurations.${HOST}\x1b[0m"
          echo -e "## Build ${HOST}\n\`$OUT_PATH\`" | tee -a "$GITHUB_STEP_SUMMARY" "${RUNNER_TEMP}/${PR_JOB_SUMMARY}" >/dev/null
      - name: Diff closures
        if: github.event_name == 'pull_request'
        run: |
          HOST_DRV="nixosConfigurations.${HOST}.config.system.build.toplevel"
          PREV_FLAKE="github:${GITHUB_REPOSITORY}"
          NEXT_FLAKE="."
          DIFF_OUTPUT="${RUNNER_TEMP}/nix-store-diff-closures-output"
          nix store diff-closures "${PREV_FLAKE}#${HOST_DRV}" "${NEXT_FLAKE}#${HOST_DRV}" | tee "$DIFF_OUTPUT"
          [[ -s "$DIFF_OUTPUT" ]] && sed -i 's/\x1b\[[0-9;]*m//g' "$DIFF_OUTPUT" || echo "No changes found" | tee "$DIFF_OUTPUT"
          echo -e "## Closures difference\n\`\`\`\n$(<$DIFF_OUTPUT)\n\`\`\`" | tee -a "$GITHUB_STEP_SUMMARY" "${RUNNER_TEMP}/${PR_JOB_SUMMARY}" >/dev/null
      - name: Add job summary to PR
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        if: github.event_name == 'pull_request'
        with:
          script: |
            const { readFile } = require('node:fs/promises')
            const comment = require('.github/scripts/comment')
            const header = '# ${{ env.HOST }}'
            const body = await readFile('${{ runner.temp }}/${{ env.PR_JOB_SUMMARY }}', { encoding: 'utf8' })
            await comment({ github, context, header, body })
